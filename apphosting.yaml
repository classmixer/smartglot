# apphosting.yaml

# 서버가 실행될 환경을 지정합니다. (Node.js 버전에 맞게 조정)
runtime: nodejs18 # 또는 nodejs20 등 사용하시는 버전에 맞게

# 애플리케이션 진입점 (server.js를 실행하는 명령어)
entrypoint: node server.js

# 환경 변수 설정
env:
  - variable: ES_URL
    value: 'https://my-elasticsearch-project-dd1d8e.es.us-central1.gcp.elastic.cloud:443' # 실제 Elasticsearch URL로 교체해주세요
  - variable: ES_API_KEY
    value: 'c1lUWWxKWUJzRkljUnBrQWMzUGc6emNUMTY4SllheDJicTNwNnptTk1uQQ==' # 실제 Elasticsearch API 키로 교체해주세요
  # server.js에서 process.env.PORT를 사용하므로, App Hosting이 자동으로 주입해줍니다.
  # 필요하다면 다른 환경 변수도 여기에 추가할 수 있습니다.
# App Hosting이 빌드 명령어를 실행하도록 설정할 수 있습니다.
# (예: TypeScript를 사용한다면 컴파일 과정 등)
# 현재 server.js가 바로 실행 가능한 JavaScript 파일이라면 별도의 빌드 과정이 필요 없을 수 있습니다.
# build: npm run build # 만약 빌드 스크립트가 있다면

# App Hosting이 정적 파일을 제공하도록 설정할 수 있습니다.
# public: . # firebase.json의 apphosting.public 설정과 일치시킵니다.

# 기타 필요한 설정 (리소스, 스케일링 등)은 Firebase 문서를 참고하여 추가할 수 있습니다.
